#log4j.rootLogger=DEBUG,console,file
#
##-----------------------------------#
##1 定义日志输出目的地为控制台
#log4j.appender.console = org.apache.log4j.ConsoleAppender
#log4j.appender.console.Target = System.out
#log4j.appender.console.Threshold=debug
#####可以灵活地指定日志输出格式，下面一行是指定具体的格式 ###
##%c: 输出日志信息所属的类目，通常就是所在类的全名
##%m: 输出代码中指定的消息,产生的日志具体信息
##%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
#log4j.appender.console.layout = org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[%c]-%m%n
##-----------------------------------#
##2 文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.file = org.apache.log4j.RollingFileAppender
##日志文件输出目录
#log4j.appender.file.File=log/tibet.log
##定义文件最大大小
#log4j.appender.file.MaxFileSize=10mb
####输出日志信息###
##最低级别
#log4j.appender.file.Threshold=ERROR
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n
##4 mybatis 显示SQL语句部分
#log4j.logger.org.mybatis=DEBUG
#log4j.logger.java.sql=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
### 设置###
log4j.rootLogger=info,stdout,D,E
### 输出信息到控制抬 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=E://logs/info.log
log4j.appender.D.Append=true
log4j.appender.D.Threshold=info
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
### 输出ERROR 级别以上的日志到=E://logs/error.log ###
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File=E://logs/error.log
log4j.appender.E.Append=true
log4j.appender.E.Threshold=ERROR
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n